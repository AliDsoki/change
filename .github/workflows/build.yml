name: Build APK with Buildozer

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y git zip unzip openjdk-17-jdk python3-pip python3-setuptools python3-wheel python3-dev build-essential libncurses-dev libreadline-dev libsqlite3-dev libgdbm-dev libdb5.3-dev libbz2-dev libexpat1-dev liblzma-dev zlib1g-dev libffi-dev libssl-dev libsndfile1 ffmpeg libgl1-mesa-dev

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install buildozer cython

      - name: Setup Android SDK with proper structure
        run: |
          # Create the exact directory structure buildozer expects
          mkdir -p .buildozer/android/platform/android-sdk
          
          # Set SDK root
          export ANDROID_SDK_ROOT=$PWD/.buildozer/android/platform/android-sdk
          export ANDROID_HOME=$ANDROID_SDK_ROOT
          
          # Download and setup command line tools
          cd /tmp
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q commandlinetools-linux-11076708_latest.zip
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          mv cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
          
          # Setup PATH
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
          
          # Accept all licenses first
          yes | sdkmanager --licenses || true
          
          # Install multiple versions of build-tools to cover all possibilities
          sdkmanager "platform-tools"
          sdkmanager "platforms;android-34"
          sdkmanager "build-tools;34.0.0"
          sdkmanager "build-tools;33.0.2"
          sdkmanager "build-tools;35.0.0" || true
          sdkmanager "build-tools;36.0.0" || true
          
          # If 36.0.0 failed, create a symlink from 34.0.0
          if [ ! -d "$ANDROID_SDK_ROOT/build-tools/36.0.0" ]; then
            echo "Creating symlink for build-tools 36.0.0"
            ln -s $ANDROID_SDK_ROOT/build-tools/34.0.0 $ANDROID_SDK_ROOT/build-tools/36.0.0
          fi
          
          # Verify installation
          echo "Installed build-tools versions:"
          ls -la $ANDROID_SDK_ROOT/build-tools/ || echo "No build-tools found"
          
          # Check for aidl
          find $ANDROID_SDK_ROOT -name "aidl" -type f || echo "aidl not found"

      - name: Initialize and configure Buildozer
        run: |
          # Create buildozer.spec if it doesn't exist
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi
          
          # Force buildozer to use our SDK path and accept licenses
          cat >> buildozer.spec << EOF
          
# Android specific
android.api = 34
android.minapi = 21
android.ndk = 25b
android.sdk = 34
android.accept_sdk_license = True
android.skip_update = False
EOF

      - name: Pre-accept Android licenses in buildozer directory
        run: |
          # Set environment variables
          export ANDROID_SDK_ROOT=$PWD/.buildozer/android/platform/android-sdk
          export ANDROID_HOME=$ANDROID_SDK_ROOT
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
          
          # Create licenses directory and accept all licenses
          mkdir -p $ANDROID_SDK_ROOT/licenses
          
          # Write license acceptance files
          echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $ANDROID_SDK_ROOT/licenses/android-sdk-license
          echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> $ANDROID_SDK_ROOT/licenses/android-sdk-license
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> $ANDROID_SDK_ROOT/licenses/android-sdk-license
          echo "84831b9409646a918e30573bab4c9c91346d8abd" > $ANDROID_SDK_ROOT/licenses/android-sdk-preview-license
          echo "79120722343a6f314e0719f863036c702b0e6b2a" > $ANDROID_SDK_ROOT/licenses/android-sdk-arm-dbt-license
          echo "d975f751698a77b662f1254ddbeed3901e976f5a" > $ANDROID_SDK_ROOT/licenses/intel-android-extra-license
          
          # Try accepting licenses again
          yes | sdkmanager --licenses || true

      - name: Cache buildozer directory
        uses: actions/cache@v3
        with:
          path: .buildozer
          key: buildozer-${{ hashFiles('buildozer.spec') }}-v2

      - name: Build the APK
        run: |
          export ANDROID_SDK_ROOT=$PWD/.buildozer/android/platform/android-sdk
          export ANDROID_HOME=$ANDROID_SDK_ROOT
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/build-tools/34.0.0:$PATH
          
          # Final check
          echo "Final check before building:"
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          ls -la $ANDROID_SDK_ROOT/build-tools/ || echo "build-tools directory missing"
          which aidl || echo "aidl not in PATH"
          
          # Build with verbose output
          buildozer android debug --verbose

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: change-bg-app
          path: bin/*.apk
