name: Build APK with Buildozer

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y git zip unzip openjdk-17-jdk python3-pip python3-setuptools python3-wheel python3-dev build-essential libncurses-dev libreadline-dev libsqlite3-dev libgdbm-dev libdb5.3-dev libbz2-dev libexpat1-dev liblzma-dev zlib1g-dev libffi-dev libssl-dev libsndfile1 ffmpeg libgl1-mesa-dev

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install buildozer cython

      - name: Initialize Buildozer and prepare directories
        run: |
          # Create buildozer.spec if it doesn't exist
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi
          
          # Update buildozer.spec with required settings
          sed -i 's/android.api = .*/android.api = 34/' buildozer.spec
          sed -i 's/android.minapi = .*/android.minapi = 21/' buildozer.spec
          sed -i 's/android.ndk = .*/android.ndk = 25b/' buildozer.spec
          sed -i 's/android.sdk = .*/android.sdk = 34/' buildozer.spec
          
          # Create buildozer directory structure
          mkdir -p .buildozer/android/platform

      - name: Setup Android SDK in buildozer directory
        run: |
          # Set up Android SDK in the path that buildozer expects
          export ANDROID_SDK_ROOT=$PWD/.buildozer/android/platform/android-sdk
          mkdir -p $ANDROID_SDK_ROOT
          
          # Download and extract command line tools
          cd /tmp
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q commandlinetools-linux-11076708_latest.zip
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          mv cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
          
          # Set environment variables
          export ANDROID_HOME=$ANDROID_SDK_ROOT
          export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools
          
          # Accept licenses automatically
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses || true
          
          # Install required packages
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platform-tools" "build-tools;34.0.0" "platforms;android-34"
          
          # Verify installation
          ls -la $ANDROID_SDK_ROOT/build-tools/
          
          # Add to environment for next steps
          echo "ANDROID_SDK_ROOT=$PWD/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=$PWD/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV

      - name: Cache buildozer global directory
        uses: actions/cache@v3
        with:
          path: .buildozer
          key: buildozer-${{ hashFiles('buildozer.spec') }}

      - name: Build the APK
        run: |
          export ANDROID_SDK_ROOT=$PWD/.buildozer/android/platform/android-sdk
          export ANDROID_HOME=$PWD/.buildozer/android/platform/android-sdk
          export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/build-tools/34.0.0
          
          # Debug: Check if aidl exists
          echo "Checking for aidl..."
          find $ANDROID_SDK_ROOT -name "aidl" -type f
          ls -la $ANDROID_SDK_ROOT/build-tools/34.0.0/ || echo "build-tools directory not found"
          
          buildozer android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: change-bg-app
          path: bin/*.apk
